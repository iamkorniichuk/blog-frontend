{
    "hide-scrollbar-but-keep-scrolling-behavior-in-css": {
        "id": "hide-scrollbar-but-keep-scrolling-behavior-in-css",
        "title": "Hide Scrollbar but keep Scrolling behavior in CSS",
        "description": "Learn how to hide a scrollbar without removing the scrolling behavior in CSS.",
        "cover": "./images/hide-scrollbar-cover.png",
        "content": "## Introduction\nIn modern web design, it’s common to create layouts where content scrolls but the scrollbar itself is hidden. This gives a cleaner, more polished look and works especially well for minimalistic designs, image galleries, and card carousels. Using CSS, you can easily **hide the scrollbar but keep scrolling behavior in CSS**, ensuring that users can still navigate content naturally.\n### When to Avoid\nWhile hiding scrollbars can improve the look of your design, there are situations where it can actually harm usability. For example:\n-  **Horizontal Scrolling Without Buttons**\n\tHorizontal scrolling can be unintuitive if no scrollbar or navigation buttons are visible. Many users don’t realize they can scroll sideways using the `Shift` key + mouse wheel. This can lead to important content being overlooked\n- **Long Content Sections**\n\t If a section contains a lot of content and users can’t see a scrollbar, they might assume the content ends where it visually appears. Hiding the scrollbar may make users miss content in long text blocks or lists.\n***\nIn general, hiding scrollbars works best for small, decorative scrollable areas like image galleries, sliders, or cards where scrolling is intuitive and expected. For critical content or horizontal scrolling areas, consider keeping a subtle scrollbar or adding clear navigation cues to maintain usability.\n## Solution\n### HTML Example\nTo start, create a scrollable container in your HTML and give it a class like `no-scrollbar`:\n```html\n<div class=\"no-scrollbar\">\n\t<img src=./image.png/>\n</div>\n```\nInitially, this container will show a scrollbar if the content overflows:\n![Overflow with a scrollbar](./images/overflow-with-scrollbar.png 'Overflow with a scrollbar')\n### CSS styling\nNext, apply the following CSS to hide the scrollbar but retain the scrolling functionality:\n```css\n.no-scrollbar {\n\toverflow: auto;           /* allow overflow */\n\t-ms-overflow-style: none; /* hides in Internet Explorer and old Edge */\n\tscrollbar-width: none;    /* hides in Firefox */\n}\n\n/* hides in Chrome, Safari, new Edge, and Opera */\n.no-scrollbar::-webkit-scrollbar {\n\tdisplay: none;\n}\n```\nWith this CSS applied, the scrollbar disappears, but the content is still scrollable:\n![Overflow without a scrollbar](./images/overflow-without-scrollbar.gif 'Overflow without a scrollbar')\n## Compatibility\n| Browser | Compatible |\n|:--- |:---:|\n| Chrome | ✅ |\n| Edge | ✅ |\n| Firefox | ✅ |\n| Safari | ✅ |\n| Internet Explorer | ✅ |\n| Opera | ✅ |\n\nMost modern browsers fully support this technique. Internet Explorer and older Edge versions use `-ms-overflow-style`. Firefox uses `scrollbar-width`, while Chrome, Safari, new Edge and Opera rely on the `::-webkit-scrollbar` pseudo-element. This ensures that your content scrolls smoothly without showing a scrollbar in almost every browser.",
        "solution": "Add `.no-scrollbar` to your container. Then, add the next code to your CSS:\n```css\n.no-scrollbar {\n\t-ms-overflow-style: none;\n\tscrollbar-width: none;\n}\n\n\n.no-scrollbar::-webkit-scrollbar {\n\tdisplay: none;\n}\n```",
        "tags": [
            "CSS",
            "HTML",
            "Frontend"
        ],
        "createdAt": "2025-10-04T16:40:00+02:00"
    }
}